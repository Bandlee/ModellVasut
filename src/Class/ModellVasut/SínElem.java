package Class.ModellVasut;


/**
 * @author Bandi
 * @version 1.0
 * @created 11-márc.-2017 3:39:56
 */
public class SínElem {

	private VonatElem aktuálisVonatElem;
	private SínElem elõzõ;
	private SínElem következõ;
	private boolean látható;
	private Csomópont sínvég1;
	private Csomópont sínvég2;

	public SínElem(){
		sínvég1 = new Csomópont();
		sínvég2 = new Csomópont();
	}

	public void finalize() throws Throwable {

	}

	public void setKövetkezõ(){
		következõ = new SínElem();
	}

	public VonatElem getÁthaladóElem(){
		System.out.println("<<SínElem::getÁthaladóElem()::boolean");
		return new Kocsi();
	}

	/**
	 * Tovább küldi az irányának megfelelõ csomópontba a v paraméterben kapott VonatElemet
	 * @param i A vonat iránya
	 * @param v A vonatelem, amelyet mozgatni akarunk
	 */
	public boolean keresztez(boolean i, VonatElem v){
		System.out.println(">>SínElem::keresztez(i,v)");
		if(i) {

			return sínvég1.tovább(v, this);
		} else {
			return sínvég2.tovább(v, this);
		}
	}

	/**
	 * 
	 * @param áe
	 */
	public void setÁthaladóElem(VonatElem áe){

	}

	public boolean ütközésElõrejelez(){
		System.out.println(">>SínElem::ütközéstElõrejelez()");
		elõzõ = new SínElem();
		következõ = new SínElem();

		System.out.println(">>SínElem::getÁthaladóElem()");
		elõzõ.getÁthaladóElem();
		System.out.println(">>SínElem::getÁthaladóElem()");
		következõ.getÁthaladóElem();
		System.out.println("<<SínElem::ütközéstElõrejelez()::boolean");
		return false;
	}

	public SínElem getKövetkezõ() {
		return következõ;
	}

	public SínElem getElõzõ() {
		return elõzõ;
	}
}